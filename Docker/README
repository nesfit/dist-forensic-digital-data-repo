
Navod pro ovladani Docker prostredi

	Pozadavky
		- mit nainstalovany Docker (Docker Toolbox) a Oracle VM VirtualBox
		- spusteni prostredi Docker napr. pomoci Docker Quickstart Terminal

	Vytvoreni virtualni masiny
		- virtualni masina by mela byt vytvorena pri instalaci Docker, ale
		  lze ji i znovu vytvorit spustenim skriptu docker-machine-recreate.sh

	Stazeni technologii v prostredi Docker
		- spusteni skriptu install-docker-enviroment.sh, ktery provede stazeni
		  obrazu technologii z DockerHub: Cassandra, Kafka, ZooKeeper

	Spusteni technologii v prostredi Docker
		- spusteni skriptu run-docker-enviroment.sh,
		  pro ucely prototypu spusti zatim pouze Cassandru a Kafku se ZooKeeper

	Ukonceni behu technologii v prostredi Docker
		- spusteni skriptu stop-docker-enviroment.sh


Navod pro ovladani technologii v Docker prostredi

	V zavislosti na pouziti Docker nebo Docker Toolbox se pouzivaji ruzne IP adresy:
		- Docker			localhost
		- Docker Toolbox	IP virtualni masiny (192.168.99.100)

	Kafka
		Vytvoreni topicu
			$ docker exec kafka kafka-topics.sh --create --zookeeper 192.168.99.100:2181 --replication-factor 1 --partitions 1 --topic input_topic
			Created topic "input_topic".

		Konfigurace topicu
			http://kafka.apache.org/documentation/ pod "3.2 Topic-Level Configs"
			$ docker exec kafka kafka-configs.sh --zookeeper 192.168.99.100:2181 --entity-type topics --entity-name input_topic --alter --add-config max.message.bytes=1000000000

		Vypsani topicu
			$ docker exec kafka kafka-topics.sh --describe --zookeeper 192.168.99.100:2181
			Topic:input_topic        PartitionCount:1        ReplicationFactor:1     Configs:
			Topic: input_topic       Partition: 0    Leader: 0       Replicas: 0     Isr: 0

		Spusteni demo producer skriptu
			$ docker exec -it kafka kafka-console-producer.sh --broker-list 192.168.99.100:9092 --topic input_topic

		Spusteni demo consumer skriptu
			$ docker exec -it kafka kafka-console-consumer.sh --bootstrap-server 192.168.99.100:9092 --topic input_topic

	Cassandra
		Otevreni CSLSH
			$ docker run -it --net cassandraofficial_default --link cassandra:cassandra -v /nosql/cassandra/data:/var/lib/cassandra --rm cassandra cqlsh cassandra
		
		Tabulky databaze jsou v adresari Environment/cassandra-official/initialize-database, tyto prikazy je nutne vlozit do otevreneho cslsh


Distribuovany repositar

	Prototyp se sklada ze tri samostatnych Maven aplikaci:
		- DistributedRepository					system distribuovaneho repositare, po spusteni bezi nepretrzite
		- DistributedRepositoryCommunication	rozhrani pro komunikaci, ktere muze pouzit klient pro komunikaci s DR
		- ProducerApp							klientska aplikace, ktera odesle PCAP do DR a pocka na odpoved
	
	Prvni je potreba nainstalovat modul DistributedRepositoryCommunication, protoze ostatni dve aplikace jej pouzivaji jako dependency.
		cd DistributedRepositoryCommunication
		mvn install
	Pote je potreba nainstalovat zbyle dve aplikace.
		cd DistributedRepository
		mvn install
		cd ProducerApp
		mvn install
	
	Jedna se o projekty do vyvojoveho prostredi IntelliJ IDEA,
	DistributedRepository a ProducerApp lze spustit primo v IDEA nebo pomoci Maven v prikazove radce.
	Pri spusteni v IDEA lze rovnez navazat spojeni na prostredi bezici v Docker a kontrolovat logy technologii Cassandra a Kafka.


