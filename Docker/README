
Navod pro ovladani Docker prostredi

	Pozadavky
		- mit nainstalovany Docker (Docker Toolbox) a Oracle VM VirtualBox,
		  je dost mozne, ze pod Linuxem bude potreba mirne upravit konfiguraci technologii (v Environment/docker-compose.yml)
		- spusteni prostredi Docker napr. pomoci Docker Quickstart Terminal

	Vytvoreni virtualni masiny
		- virtualni masina by mela byt vytvorena pri instalaci Docker, ale
		  lze ji i znovu vytvorit spustenim skriptu docker-machine-recreate.sh

	Stazeni technologii v prostredi Docker
		- spusteni skriptu install-docker-enviroment.sh, ktery provede stazeni obrazu
		  technologii z DockerHub: Cassandra, Kafka, ZooKeeper, MongoDB, Hadoop

	Spusteni technologii v prostredi Docker
		- spusteni skriptu run-docker-enviroment.sh, spusti vsechny vyse zminene technologie

	Ukonceni behu technologii v prostredi Docker
		- spusteni skriptu stop-docker-enviroment.sh


Navod pro ovladani technologii v Docker prostredi

	V zavislosti na pouziti Docker nebo Docker Toolbox se pouzivaji ruzne IP adresy:
		- Docker			localhost
		- Docker Toolbox	IP virtualni masiny (192.168.99.100)

	Kafka
		Vytvoreni topicu
			$ docker exec kafka kafka-topics.sh --create --zookeeper 192.168.99.100:2181 --replication-factor 1 --partitions 1 --topic input_topic
			Created topic "input_topic".

		Konfigurace topicu
			http://kafka.apache.org/documentation/ pod "3.2 Topic-Level Configs"
			$ docker exec kafka kafka-configs.sh --zookeeper 192.168.99.100:2181 --entity-type topics --entity-name input_topic --alter --add-config max.message.bytes=1000000000

		Vypsani topicu
			$ docker exec kafka opt/kafka/bin/kafka-topics.sh --describe --zookeeper 192.168.99.100:2181
			Topic:input_topic        PartitionCount:1        ReplicationFactor:1     Configs:
			Topic: input_topic       Partition: 0    Leader: 0       Replicas: 0     Isr: 0

		Spusteni demo producer skriptu
			$ docker exec -it kafka kafka-console-producer.sh --broker-list 192.168.99.100:9092 --topic input_topic

		Spusteni demo consumer skriptu
			$ docker exec -it kafka kafka-console-consumer.sh --bootstrap-server 192.168.99.100:9092 --topic input_topic

	Cassandra
		Otevreni CSLSH
			$ docker run -it --link cassandra:cassandra --rm cassandra cqlsh cassandra
	
	MongoDB
		Otevreni Mongo shell
			$ docker run -it --link mongodb:mongodb --rm mongo mongo 192.168.99.100:27017


Distribuovany repositar

	Implementace se sklada ze ctyr Maven modulu:
		- Communication							rozhrani pro komunikaci
		- Persistence							Obsluha Cassandry a MongoDB
		- DistributedRepository					system distribuovaneho repositare, po spusteni bezi nepretrzite
		- ProducerDemo							klientska aplikace
	
	Prvni je potreba nainstalovat moduly Communication a Persistence, protoze ostatni dve aplikace jej pouzivaji jako dependency.
		cd Communication
			./install.sh
		cd Persistence
			./install.sh
	Pote je potreba nainstalovat zbyle dve aplikace.
		cd DistributedRepository
			./install.sh
		cd ProducerDemo
			./install.sh
	
	Jedna se o projekty vytvorene ve vyvojovem prostredi IntelliJ IDEA.
	Pro IDEA existuje plugin Docker, kde lze videt po pripojeni obrazy a bezici kontejnery, zaroven lze sledovat jejich nastaveni a logy.

